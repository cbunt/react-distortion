name: Release

on:
  workflow_dispatch:
    inputs:
      dry:
        description: 'If the release workflow should be a dry run'
        type: boolean
        required: false
        default: false
      type:
        description: 'Version type of release'
        type: choice
        required: true
        options:
          - major
          - minor
          - patch

jobs:
  CI:
    uses: ./.github/workflows/ci.yml
  Release:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      # This is early in the pipeline in case it fails
      - name: Build Package
        run: pnpm build

      - name: Get Changes
        id: changes
        uses: mindsers/changelog-reader-action@v2
        with:
          version: Unreleased
          validation_level: warn

      - name: Bump Version
        id: bump_version
        run: |
          version=$(pnpm version --no-git-tag-version ${{ inputs.type }})
          echo "version=${version//v}" >> $GITHUB_OUTPUT

      - name: Update Changelog
        uses: superfaceai/release-changelog-action@v2
        with:
          version: ${{ steps.bump_version.outputs.version }}
          operation: release

      - name: Build Readme
        run:  pnpm run docs

      - name: Publish to npm 
        run: pnpm publish ${{ inputs.dry && '--dry-run' || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit Updates
        uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ !inputs.dry }}
        with:
          tagging_message: 'v${{ steps.bump_version.outputs.version }}'
          commit_message: 'chore: v${{ steps.bump_version.outputs.version }}'

      - name: Stash Dry
        if: ${{ inputs.dry }}
        run: git stash

      - name: Create Release
        uses: ncipollo/release-action@v1
        if: ${{ !inputs.dry }}
        with:
          tag: 'v${{ steps.bump_version.outputs.version }}'
          name: 'Release v${{ steps.bump_version.outputs.version }}'
          body: ${{ steps.changes.outputs.changes }}
          token: ${{ secrets.GITHUB_TOKEN }}
